{"ast":null,"code":"import _objectSpread from \"/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_NUMBER, DO_OPERATION } from \"../actions/actionTypes\";\nconst defaultState = {\n  previousNumber: null,\n  currentOperation: null,\n  display: '0'\n};\nexport default ((state = {\n  defaultState\n}, action) => {\n  switch (action.type) {\n    case ADD_NUMBER:\n      if (state.display == '0') {\n        return _objectSpread({}, state, {\n          display: action.payload.digit\n        });\n      } else {\n        return _objectSpread({}, state, {\n          display: state.display + \"\" + action.payload.digit\n        });\n      }\n\n    case DO_OPERATION:\n      let parsePreviousNumber = parseFloat(state.previousNumber);\n\n      if (parsePreviousNumber != null && state.currentOperation != null) {\n        let calcResult = 0;\n\n        switch (state.currentOperation) {\n          case '+':\n            calcResult = parsePreviousNumber + parseFloat(state.display);\n            break;\n\n          case '-':\n            calcResult = parsePreviousNumber - parseFloat(state.display);\n            break;\n\n          case '*':\n            calcResult = parsePreviousNumber * parseFloat(state.display);\n            break;\n\n          case '/':\n            calcResult = parsePreviousNumber / parseFloat(state.display);\n            break;\n\n          case 'clear':\n            return state;\n            break;\n\n          default:\n            calcResult = state.previousNumber + parseFloat(state.display);\n            break;\n        }\n\n        if (action.payload.operation === '=') {\n          return {\n            currentOperation: null,\n            previousNumber: null,\n            display: parseFloat(calcResult)\n          };\n        } else {\n          return {\n            previousNumber: calcResult,\n            currentOperation: action.payload.operation,\n            display: '0'\n          };\n        }\n      } else {\n        return {\n          previousNumber: state.display,\n          currentOperation: action.payload.operation,\n          display: '0'\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/src/reducers/calc.js"],"names":["ADD_NUMBER","DO_OPERATION","defaultState","previousNumber","currentOperation","display","state","action","type","payload","digit","parsePreviousNumber","parseFloat","calcResult","operation"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,wBAAzC;AAEA,MAAMC,YAAY,GAAG;AACrBC,EAAAA,cAAc,EAAE,IADK;AAEjBC,EAAAA,gBAAgB,EAAE,IAFD;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,gBAAe,CACbC,KAAK,GAAG;AAACJ,EAAAA;AAAD,CADK,EACWK,MADX,KACoB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,UAAL;AACE,UAAGM,KAAK,CAACD,OAAN,IAAiB,GAApB,EAAwB;AACtB,iCACKC,KADL;AAEED,UAAAA,OAAO,EAAGE,MAAM,CAACE,OAAP,CAAeC;AAF3B;AAID,OALD,MAKK;AACH,iCACKJ,KADL;AAEED,UAAAA,OAAO,EAAGC,KAAK,CAACD,OAAN,GAAgB,EAAhB,GAAmBE,MAAM,CAACE,OAAP,CAAeC;AAF9C;AAID;;AACH,SAAKT,YAAL;AACE,UAAIU,mBAAmB,GAAEC,UAAU,CAACN,KAAK,CAACH,cAAP,CAAnC;;AACA,UAAGQ,mBAAmB,IAAI,IAAvB,IAA+BL,KAAK,CAACF,gBAAN,IAA0B,IAA5D,EAAiE;AAC/D,YAAIS,UAAU,GAAG,CAAjB;;AACA,gBAAOP,KAAK,CAACF,gBAAb;AACE,eAAK,GAAL;AAAUS,YAAAA,UAAU,GAAGF,mBAAmB,GAAGC,UAAU,CAACN,KAAK,CAACD,OAAP,CAA7C;AAA6D;;AACvE,eAAK,GAAL;AAAUQ,YAAAA,UAAU,GAAGF,mBAAmB,GAAGC,UAAU,CAACN,KAAK,CAACD,OAAP,CAA7C;AAA6D;;AACvE,eAAK,GAAL;AAAUQ,YAAAA,UAAU,GAAGF,mBAAmB,GAAGC,UAAU,CAACN,KAAK,CAACD,OAAP,CAA7C;AAA6D;;AACvE,eAAK,GAAL;AAAUQ,YAAAA,UAAU,GAAGF,mBAAmB,GAAGC,UAAU,CAACN,KAAK,CAACD,OAAP,CAA7C;AAA6D;;AACvE,eAAK,OAAL;AACA,mBAAOC,KAAP;AACC;;AACD;AAASO,YAAAA,UAAU,GAAGP,KAAK,CAACH,cAAN,GAAuBS,UAAU,CAACN,KAAK,CAACD,OAAP,CAA9C;AAA8D;AARzE;;AAWA,YAAGE,MAAM,CAACE,OAAP,CAAeK,SAAf,KAA6B,GAAhC,EAAoC;AAClC,iBAAO;AACLV,YAAAA,gBAAgB,EAAE,IADb;AAELD,YAAAA,cAAc,EAAE,IAFX;AAGLE,YAAAA,OAAO,EAAEO,UAAU,CAACC,UAAD;AAHd,WAAP;AAKD,SAND,MAMK;AACH,iBAAO;AACLV,YAAAA,cAAc,EAAEU,UADX;AAELT,YAAAA,gBAAgB,EAAEG,MAAM,CAACE,OAAP,CAAeK,SAF5B;AAGLT,YAAAA,OAAO,EAAE;AAHJ,WAAP;AAKD;AACF,OA1BD,MA0BK;AACH,eAAO;AACLF,UAAAA,cAAc,EAAEG,KAAK,CAACD,OADjB;AAELD,UAAAA,gBAAgB,EAAEG,MAAM,CAACE,OAAP,CAAeK,SAF5B;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACH;AAAS,aAAOC,KAAP;AAhDX;AAkDH,CApDD","sourcesContent":["import { ADD_NUMBER, DO_OPERATION } from \"../actions/actionTypes\";\n\nconst defaultState = {\npreviousNumber: null,\n    currentOperation: null,\n    display: '0'\n};\n\nexport default (\n  state = {defaultState}, action)=>{\n    switch(action.type){\n      case ADD_NUMBER: \n        if(state.display == '0'){\n          return {\n            ...state,\n            display : action.payload.digit\n          }\n        }else{\n          return {\n            ...state,\n            display : state.display + \"\"+action.payload.digit\n          }\n        }\n      case DO_OPERATION:\n        let parsePreviousNumber= parseFloat(state.previousNumber);\n        if(parsePreviousNumber != null && state.currentOperation != null){\n          let calcResult = 0;\n          switch(state.currentOperation){\n            case '+': calcResult = parsePreviousNumber + parseFloat(state.display);break;\n            case '-': calcResult = parsePreviousNumber - parseFloat(state.display);break;\n            case '*': calcResult = parsePreviousNumber * parseFloat(state.display);break;\n            case '/': calcResult = parsePreviousNumber / parseFloat(state.display);break;\n            case 'clear':\n            return state;\n             break;\n            default: calcResult = state.previousNumber + parseFloat(state.display);break;\n          }\n\n          if(action.payload.operation === '='){\n            return {\n              currentOperation: null,\n              previousNumber: null,\n              display: parseFloat(calcResult)\n            }\n          }else{\n            return {\n              previousNumber: calcResult,\n              currentOperation: action.payload.operation,\n              display: '0'\n            }\n          }\n        }else{\n          return {\n            previousNumber: state.display,\n            currentOperation: action.payload.operation,\n            display: '0'\n          }\n        }\n      default: return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}