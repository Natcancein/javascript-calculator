{"ast":null,"code":"import _objectSpread from \"/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_NUMBER, DO_OPERATION } from \"../actions/actionTypes\";\nexport default ((state = {\n  previousNumber: null,\n  currentOperation: null,\n  display: '0'\n}, action) => {\n  switch (action.type) {\n    case ADD_NUMBER:\n      if (state.display == '0') {\n        return _objectSpread({}, state, {\n          display: action.payload.digit\n        });\n      } else {\n        return _objectSpread({}, state, {\n          display: state.display + \"\" + action.payload.digit\n        });\n      }\n\n    case DO_OPERATION:\n      if (state.previousNumber != null && state.currentOperation != null) {\n        let calcResult = 0;\n\n        switch (state.currentOperation) {\n          case '+':\n            calcResult = state.previousNumber + parseInt(state.display);\n            break;\n\n          case '-':\n            calcResult = state.previousNumber - parseInt(state.display);\n            break;\n\n          case '*':\n            calcResult = state.previousNumber * parseInt(state.display);\n            break;\n\n          case '/':\n            calcResult = state.previousNumber / parseInt(state.display);\n            break;\n\n          case 'clear':\n            calcResult = '0';\n            break;\n\n          default:\n            calcResult = state.previousNumber + parseInt(state.display);\n            break;\n        }\n\n        if (action.payload.operation == '=') {\n          return {\n            currentOperation: null,\n            previousNumber: null,\n            display: calcResult\n          };\n        } else {\n          return {\n            previousNumber: calcResult,\n            currentOperation: action.payload.operation,\n            display: '0'\n          };\n        }\n      } else {\n        return {\n          previousNumber: parseInt(state.display),\n          currentOperation: action.payload.operation,\n          display: '0'\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/src/reducers/calc.js"],"names":["ADD_NUMBER","DO_OPERATION","state","previousNumber","currentOperation","display","action","type","payload","digit","calcResult","parseInt","operation"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,wBAAzC;AAEA,gBAAe,CACbC,KAAK,GAAG;AACNC,EAAAA,cAAc,EAAE,IADV;AAENC,EAAAA,gBAAgB,EAAE,IAFZ;AAGNC,EAAAA,OAAO,EAAE;AAHH,CADK,EAKVC,MALU,KAKD;AACV,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,UAAL;AACE,UAAGE,KAAK,CAACG,OAAN,IAAiB,GAApB,EAAwB;AACtB,iCACKH,KADL;AAEEG,UAAAA,OAAO,EAAGC,MAAM,CAACE,OAAP,CAAeC;AAF3B;AAID,OALD,MAKK;AACH,iCACKP,KADL;AAEEG,UAAAA,OAAO,EAAGH,KAAK,CAACG,OAAN,GAAgB,EAAhB,GAAqBC,MAAM,CAACE,OAAP,CAAeC;AAFhD;AAID;;AACH,SAAKR,YAAL;AACE,UAAGC,KAAK,CAACC,cAAN,IAAwB,IAAxB,IAAgCD,KAAK,CAACE,gBAAN,IAA0B,IAA7D,EAAkE;AAChE,YAAIM,UAAU,GAAG,CAAjB;;AACA,gBAAOR,KAAK,CAACE,gBAAb;AACE,eAAK,GAAL;AAAUM,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CAA5C;AAA4D;;AACtE,eAAK,GAAL;AAAUK,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CAA5C;AAA4D;;AACtE,eAAK,GAAL;AAAUK,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CAA5C;AAA4D;;AACtE,eAAK,GAAL;AAAUK,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CAA5C;AAA4D;;AACtE,eAAK,OAAL;AACAK,YAAAA,UAAU,GAAG,GAAb;AACC;;AACD;AAASA,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CAA5C;AAA4D;AARvE;;AAWA,YAAGC,MAAM,CAACE,OAAP,CAAeI,SAAf,IAA4B,GAA/B,EAAmC;AACjC,iBAAO;AACLR,YAAAA,gBAAgB,EAAE,IADb;AAELD,YAAAA,cAAc,EAAE,IAFX;AAGLE,YAAAA,OAAO,EAAEK;AAHJ,WAAP;AAKD,SAND,MAMK;AACH,iBAAO;AACLP,YAAAA,cAAc,EAAEO,UADX;AAELN,YAAAA,gBAAgB,EAAEE,MAAM,CAACE,OAAP,CAAeI,SAF5B;AAGLP,YAAAA,OAAO,EAAE;AAHJ,WAAP;AAKD;AACF,OA1BD,MA0BK;AACH,eAAO;AACLF,UAAAA,cAAc,EAAEQ,QAAQ,CAACT,KAAK,CAACG,OAAP,CADnB;AAELD,UAAAA,gBAAgB,EAAEE,MAAM,CAACE,OAAP,CAAeI,SAF5B;AAGLP,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACH;AAAS,aAAOH,KAAP;AA/CX;AAiDH,CAvDD","sourcesContent":["import { ADD_NUMBER, DO_OPERATION } from \"../actions/actionTypes\";\n\nexport default (\n  state = {\n    previousNumber: null,\n    currentOperation: null,\n    display: '0'\n  }, action)=>{\n    switch(action.type){\n      case ADD_NUMBER: \n        if(state.display == '0'){\n          return {\n            ...state,\n            display : action.payload.digit\n          }\n        }else{\n          return {\n            ...state,\n            display : state.display + \"\" + action.payload.digit\n          }\n        }\n      case DO_OPERATION:\n        if(state.previousNumber != null && state.currentOperation != null){\n          let calcResult = 0;\n          switch(state.currentOperation){\n            case '+': calcResult = state.previousNumber + parseInt(state.display);break;\n            case '-': calcResult = state.previousNumber - parseInt(state.display);break;\n            case '*': calcResult = state.previousNumber * parseInt(state.display);break;\n            case '/': calcResult = state.previousNumber / parseInt(state.display);break;\n            case 'clear':\n            calcResult = '0';\n             break;\n            default: calcResult = state.previousNumber + parseInt(state.display);break;\n          }\n\n          if(action.payload.operation == '='){\n            return {\n              currentOperation: null,\n              previousNumber: null,\n              display: calcResult\n            }\n          }else{\n            return {\n              previousNumber: calcResult,\n              currentOperation: action.payload.operation,\n              display: '0'\n            }\n          }\n        }else{\n          return {\n            previousNumber: parseInt(state.display),\n            currentOperation: action.payload.operation,\n            display: '0'\n          }\n        }\n      default: return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}