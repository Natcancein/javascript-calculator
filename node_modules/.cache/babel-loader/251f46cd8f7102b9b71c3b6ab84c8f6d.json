{"ast":null,"code":"import _objectSpread from \"/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_NUMBER, DO_OPERATION, DO_CLEAR } from \"../actions/actionTypes\";\nexport default ((state = {\n  previousNumber: null,\n  currentOperation: null,\n  display: '0'\n}, action) => {\n  switch (action.type) {\n    case DO_CLEAR:\n      return _objectSpread({}, state, {\n        previousNumber: null,\n        currentOperation: null,\n        display: '0'\n      });\n\n    case ADD_NUMBER:\n      if (state.display == /D/) {\n        return _objectSpread({}, state, {\n          display: action.payload.digit\n        });\n      } else {\n        return _objectSpread({}, state, {\n          display: state.display + \"\" + action.payload.digit\n        });\n      }\n\n    case DO_OPERATION:\n      if (state.previousNumber != null && state.currentOperation != null) {\n        let calcResult = 0;\n        let floatNumber = parseFloat(state.display);\n\n        switch (state.currentOperation) {\n          case '+':\n            calcResult = state.previousNumber + floatNumber;\n            break;\n\n          case '-':\n            calcResult = state.previousNumber - floatNumber;\n            break;\n\n          case '*':\n            calcResult = state.previousNumber * floatNumber;\n            break;\n\n          case '/':\n            calcResult = state.previousNumber / floatNumber;\n            break;\n            break;\n\n          default:\n            calcResult = state.previousNumber + floatNumber;\n            break;\n        }\n\n        if (action.payload.operation == '=') {\n          return {\n            currentOperation: null,\n            previousNumber: null,\n            display: calcResult\n          };\n        } else {\n          return {\n            previousNumber: calcResult,\n            currentOperation: action.payload.operation,\n            display: '0'\n          };\n        }\n      } else {\n        return {\n          previousNumber: parseFloat(state.display),\n          currentOperation: action.payload.operation,\n          display: '0'\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/gabrielita/Desktop/FreeCodeCamp/FrontEndLibrariesProjects/javascript-calculator/src/reducers/calc.js"],"names":["ADD_NUMBER","DO_OPERATION","DO_CLEAR","state","previousNumber","currentOperation","display","action","type","payload","digit","calcResult","floatNumber","parseFloat","operation"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,QAAmD,wBAAnD;AAEA,gBAAe,CACbC,KAAK,GAAG;AACNC,EAAAA,cAAc,EAAE,IADV;AAENC,EAAAA,gBAAgB,EAAE,IAFZ;AAGNC,EAAAA,OAAO,EAAE;AAHH,CADK,EAKVC,MALU,KAKD;AACV,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,QAAL;AACI,+BACKC,KADL;AAEEC,QAAAA,cAAc,EAAE,IAFlB;AAGNC,QAAAA,gBAAgB,EAAE,IAHZ;AAINC,QAAAA,OAAO,EAAE;AAJH;;AAMJ,SAAKN,UAAL;AACE,UAAGG,KAAK,CAACG,OAAN,IAAiB,GAApB,EAAwB;AACtB,iCACKH,KADL;AAEEG,UAAAA,OAAO,EAAGC,MAAM,CAACE,OAAP,CAAeC;AAF3B;AAID,OALD,MAKK;AACH,iCACKP,KADL;AAEEG,UAAAA,OAAO,EAAGH,KAAK,CAACG,OAAN,GAAgB,EAAhB,GAAqBC,MAAM,CAACE,OAAP,CAAeC;AAFhD;AAID;;AACH,SAAKT,YAAL;AACE,UAAGE,KAAK,CAACC,cAAN,IAAwB,IAAxB,IAAgCD,KAAK,CAACE,gBAAN,IAA0B,IAA7D,EAAkE;AAChE,YAAIM,UAAU,GAAG,CAAjB;AACA,YAAIC,WAAW,GAAEC,UAAU,CAACV,KAAK,CAACG,OAAP,CAA3B;;AACA,gBAAOH,KAAK,CAACE,gBAAb;AACE,eAAK,GAAL;AAAUM,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,WAApC;AAAgD;;AAC1D,eAAK,GAAL;AAAUD,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,WAApC;AAAgD;;AAC1D,eAAK,GAAL;AAAUD,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,WAApC;AAAgD;;AAC1D,eAAK,GAAL;AAAUD,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,WAApC;AAAgD;AACzD;;AACD;AAASD,YAAAA,UAAU,GAAGR,KAAK,CAACC,cAAN,GAAuBQ,WAApC;AAAgD;AAN3D;;AASA,YAAGL,MAAM,CAACE,OAAP,CAAeK,SAAf,IAA4B,GAA/B,EAAmC;AACjC,iBAAO;AACLT,YAAAA,gBAAgB,EAAE,IADb;AAELD,YAAAA,cAAc,EAAE,IAFX;AAGLE,YAAAA,OAAO,EAAEK;AAHJ,WAAP;AAKD,SAND,MAMK;AACH,iBAAO;AACLP,YAAAA,cAAc,EAAEO,UADX;AAELN,YAAAA,gBAAgB,EAAEE,MAAM,CAACE,OAAP,CAAeK,SAF5B;AAGLR,YAAAA,OAAO,EAAE;AAHJ,WAAP;AAKD;AAEF,OA1BD,MA0BK;AACH,eAAO;AACLF,UAAAA,cAAc,EAAES,UAAU,CAACV,KAAK,CAACG,OAAP,CADrB;AAELD,UAAAA,gBAAgB,EAAEE,MAAM,CAACE,OAAP,CAAeK,SAF5B;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACH;AAAS,aAAOH,KAAP;AAtDX;AAwDH,CA9DD","sourcesContent":["import { ADD_NUMBER, DO_OPERATION, DO_CLEAR } from \"../actions/actionTypes\";\n\nexport default (\n  state = {\n    previousNumber: null,\n    currentOperation: null,\n    display: '0'\n  }, action)=>{\n    switch(action.type){\n      case DO_CLEAR: \n          return {\n            ...state,\n            previousNumber: null,\n    currentOperation: null,\n    display: '0'\n          }\n      case ADD_NUMBER: \n        if(state.display == /D/){\n          return {\n            ...state,\n            display : action.payload.digit\n          }\n        }else{\n          return {\n            ...state,\n            display : state.display + \"\" + action.payload.digit\n          }\n        }\n      case DO_OPERATION:\n        if(state.previousNumber != null && state.currentOperation != null){\n          let calcResult = 0;\n          let floatNumber= parseFloat(state.display);\n          switch(state.currentOperation){\n            case '+': calcResult = state.previousNumber + floatNumber;break;\n            case '-': calcResult = state.previousNumber - floatNumber;break;\n            case '*': calcResult = state.previousNumber * floatNumber;break;\n            case '/': calcResult = state.previousNumber / floatNumber;break;\n             break;\n            default: calcResult = state.previousNumber + floatNumber;break;\n          }\n\n          if(action.payload.operation == '='){\n            return {\n              currentOperation: null,\n              previousNumber: null,\n              display: calcResult\n            }\n          }else{\n            return {\n              previousNumber: calcResult,\n              currentOperation: action.payload.operation,\n              display: '0'\n            }\n          }\n          \n        }else{\n          return {\n            previousNumber: parseFloat(state.display),\n            currentOperation: action.payload.operation,\n            display: '0'\n          }\n        }\n      default: return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}